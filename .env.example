###################################################
## APPLICATION CONFIGURATION:                    ##
###################################################

# BASE DIRECTORY (REQUIRED)
# The directory where your ebooks are mounted inside the container.
# Example: /ebooks
BASE_DIRECTORY=/ebooks

# BASE URL (REQUIRED)
# The URL where the application will be accessible. Include protocol, hostname, and optional port.
# Format: https://books.example.com or http://localhost:5000
BASE_URL=

# SECRET KEY (REQUIRED)
# Used for encrypting JWT tokens.
# Generate a new key using openssl rand -hex 32
SECRET_KEY=

# ADMIN EMAIL (REQUIRED ON FIRST STARTUP)
# Used to set the initial admin user's email address on first startup.
# Can be removed/unset after initialization
ADMIN_EMAIL=

# ADMIN PASS (REQUIRED ON FIRST STARTUP)
# Used to set the initial admin user's password on first startup.
# Can be removed/unset after initialization
ADMIN_PASS=

# ADMIN RESET (OPTIONAL)
# Used to set the admin user's password to ADMIN_PASS, and to remove configured MFA
# Should be used as a last resort if admin credentials or MFA method have been lost
ADMIN_RESET=false

# UI BASE COLOR (OPTIONAL)
# Used to set the base color of the UI.
# Valid options: green (default), blue, red, yellow, white, black, pink, purple, orange, cyan
UI_BASE_COLOR: green

# LOG LEVEL (OPTIONAL)
# The logging level for the application. Defaults to 'INFO'.
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# APP PORT (REQUIRED FOR DOCKER COMPOSE)
# The port the app will listen on within the container. This is mapped via Docker Compose.
# Default: 5000
APP_PORT=5000

# WORKERS (OPTIONAL)
# The number of gunicorn workers to spawn. Higher = better scaling, but higher resource consumption
# Default: 1
WORKERS=1

# ENABLE HTTPS (OPTIONAL)
# Whether or not your app is HTTPS enabled internally.
# Can be disabled if you reverse proxy does SSL.
# Default: false
ENABLE_HTTPS=false

# SSL CERT FILE (REQUIRED IF ENABLE_HTTPS=true)
# Path relative to /ssl/ where your certificate is mounted
# For example, if your certificate is mounted to /ssl/cert.crt, then SSL_CERT_FILE=cert.crt
# SSL_CERT_FILE=cert.crt

# SSL KEY FILE (REQUIRED IF ENABLE_HTTPS=true)
# Path relative to /ssl/ where your certificate is mounted
# For example, if your certificate is mounted to /ssl/key.key, then SSL_CERT_FILE=key.key
# SSL_KEY_FILE=key.key

# RATE LIMITER ENABLED (OPTIONAL)
# Whether or not to enable the IP-based rate limiter
# Default: True
RATE_LIMITER_ENABLED=true

# SCHEDULER ENABLED (OPTIONAL)
# Whether or not to enable the periodic scanning of your library.
# Manual library scanning is still available whether disabled or enabled.
# Default: True
SCHEDULER_ENABLED=true

# PERIODIC SCAN INTERVAL (OPTIONAL)
# How frequently the scheduler will scan your library, in minutes
# Default: 10
PERIODIC_SCAN_INTERVAL=10

###################################################
## DATABASE CONFIGURATION FOR APPLICATION:       ##
###################################################

# DATABASE TYPE (REQUIRED)
# Specify the type of database to use for the application.
# Supported options: mysql, postgres, sqlite (not recommended for production)
DB_TYPE=mysql

# DATABASE HOST (REQUIRED)
# The hostname or IP address of the database.
# Defaults to 'mysql' when using the provided MySQL container.
DB_HOST=mysql

# DATABASE PORT (REQUIRED FOR DOCKER COMPOSE OR CUSTOM CONNECTIONS)
# The port used to connect to the database. Required for MySQL and PostgreSQL.
# Default: 3306 for MySQL, 5432 for PostgreSQL, or leave unset for SQLite.
DB_PORT=3306

# DATABASE NAME (REQUIRED)
# Name of the database used to store EPUB metadata.
# Default: epub_library
DB_NAME=epub_library

# DATABASE USER (REQUIRED)
# The username for the database connection.
DB_USER=epub_user

# DATABASE PASSWORD (REQUIRED)
# The password for the database connection.
# Use a strong and secure password.
DB_PASSWORD=secure_password_here

###################################################
## REDIS CONFIGURATION FOR APPLICATION:          ##
###################################################

# REDIS HOST (REQUIRED)
# Host running Redis
# Default: localhost
REDIS_HOST=redis

# REDIS PORT (REQUIRED)
# Redis port
# Default: 6379
REDIS_PORT=6379

# REDIS PASSWORD (REQUIRED if Redis auth is enabled on your REDIS instance)
# Default: N/A, DOCKER COMPOSE REDIS does not use auth
# REDIS_PASSWORD=password

# REDIS LIMITER DATABASE
# Redis database for the rate limiter to use to keep track of IPs/Requests
# Default: 0
REDIS_LIMITER_DB=0

# REDIS SCHEDULER DATABASE
# Redis database for the periodic library scanner to use
# Default: 5
REDIS_SCHEDULER_DB=5

###################################################
## MYSQL CONTAINER CONFIGURATION:                ##
###################################################

# MYSQL ROOT PASSWORD (REQUIRED FOR DOCKER COMPOSE MYSQL CONTAINER)
# Set the root password for MySQL if using the MySQL container provided in the Docker Compose file.
# Use a strong and secure password.
MYSQL_ROOT_PASSWORD=secure_mysql_root_password

# MYSQL DATABASE (REQUIRED FOR DOCKER COMPOSE MYSQL CONTAINER)
# Specifies the default database created in the MySQL container.
MYSQL_DATABASE=epub_library

# (REQUIRED FOR DOCKER COMPOSE MYSQL CONTAINER)
MYSQL_USER=epub_user

# (REQUIRED FOR DOCKER COMPOSE MYSQL CONTAINER)
MYSQL_PASSWORD=secure_password_here